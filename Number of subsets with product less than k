Given an array arr[] of N elements. Find the number of non-empty subsets whose product of elements is less than or equal to a given integer K.

 

Example 1:

Input:
N = 4
arr[] = {2, 4, 5, 3}
K = 12
Output:
8
Explanation:
All possible subsets whose 
products are less than 12 are:
(2), (4), (5), (3), (2, 4), (2, 5), (2, 3), (4, 3)



def countSubsets(arr, N, K):
    # Initialize a 2D DP table
    dp = [[0] * (K + 1) for _ in range(N + 1)]

    # Base case: 1 subset of size 0 with product 1 (empty subset)
    for i in range(N + 1):
        dp[i][0] = 1

    # Fill the DP table
    for i in range(1, N + 1):
        for j in range(1, K + 1):
            # Exclude the current element
            dp[i][j] = dp[i - 1][j]

            # Include the current element if it doesn't exceed K
            if arr[i - 1] <= j:
                dp[i][j] += dp[i - 1][j // arr[i - 1]]

    # The result is in the last cell of the DP table
    return dp[N][K]

# Example
arr = [2, 4, 5, 3]
N = 4
K = 12
result = countSubsets(arr, N, K)
print(result)
